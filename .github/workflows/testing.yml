name: Testing

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: ./go.mod

      - name: Lint Golang
        uses: golangci/golangci-lint-action@v8
        with:
          only-new-issues: ${{ github.event_name == 'pull_request' }}
          args: >
            --config=./.github/linters/.golangci.yml

  test:
    name: Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:11.21-alpine
        ports:
          - "5432"
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Check out code
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: ./go.mod

      - name: Run tests
        if: success()
        run: go test -timeout 60s -cover ./... -coverprofile=coverage.txt -covermode=atomic
        env:
          TEST_POSTGRES: postgres://test:test@localhost:${{ job.services.postgres.ports[5432] }}/test?sslmode=disable

      - name: Upload coverage to Codecov
        if: success()
        uses: codecov/codecov-action@v5
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          file: ./coverage.txt
          fail_ci_if_error: false
